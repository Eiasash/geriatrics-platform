// Geriatrics Fellowship Training Module\n// Comprehensive training system for Israeli geriatrics fellowship program\n// Integrates with Shaare Zedek Medical Center curriculum\n\nclass GeriatricsFellowshipProgram {\n  constructor() {\n    this.program = {\n      duration: '12 months',\n      institution: 'Shaare Zedek Medical Center',\n      accreditation: 'Israeli Board of Internal Medicine',\n      rotations: this.initializeRotations(),\n      competencies: this.initializeCompetencies(),\n      assessments: this.initializeAssessments()\n    };\n    \n    this.fellowProgress = new Map();\n    this.milestones = this.initializeMilestones();\n    this.curriculum = this.initializeCurriculum();\n  }\n\n  initializeRotations() {\n    return {\n      inpatientGeriatrics: {\n        duration: '4 months',\n        setting: 'Shaare Zedek Geriatrics Ward',\n        objectives: [\n          'Manage complex geriatric syndromes',\n          'Lead multidisciplinary team',\n          'Conduct comprehensive geriatric assessments',\n          'Develop discharge planning skills'\n        ],\n        keyExperiences: [\n          'Daily ward rounds with attending',\n          'Family conferences',\n          'Multidisciplinary team meetings',\n          'Complex case presentations'\n        ]\n      },\n      \n      outpatientGeriatrics: {\n        duration: '3 months', \n        setting: 'Clalit/Maccabi Community Clinics',\n        objectives: [\n          'Manage chronic geriatric conditions',\n          'Preventive care in elderly',\n          'Community resource utilization',\n          'Care coordination with primary care'\n        ],\n        keyExperiences: [\n          'Independent clinic sessions',\n          'Home visits for homebound patients',\n          'Kupah coordination meetings',\n          'Family caregiver education'\n        ]\n      },\n      \n      consultationService: {\n        duration: '2 months',\n        setting: 'Multi-hospital consultation',\n        objectives: [\n          'Perioperative geriatric assessment',\n          'Complex diagnostic challenges',\n          'Medication management expertise',\n          'Ethical consultation skills'\n        ],\n        keyExperiences: [\n          'Pre-operative evaluations',\n          'ICU consultations',\n          'Emergency department assessments',\n          'Ethics committee participation'\n        ]\n      },\n      \n      memoryClinic: {\n        duration: '1 month',\n        setting: 'Hadassah/Tel Aviv Medical Center',\n        objectives: [\n          'Cognitive assessment expertise',\n          'Dementia diagnosis and staging',\n          'Family counseling skills',\n          'Research participation'\n        ],\n        keyExperiences: [\n          'Neuropsychological testing',\n          'Brain imaging interpretation',\n          'Support group facilitation',\n          'Research protocol participation'\n        ]\n      },\n      \n      palliativeCare: {\n        duration: '1 month',\n        setting: 'Hospice/Palliative Care Unit',\n        objectives: [\n          'End-of-life care principles',\n          'Symptom management',\n          'Cultural sensitivity',\n          'Family support skills'\n        ],\n        keyExperiences: [\n          'Goals of care discussions',\n          'Pain and symptom management',\n          'Spiritual care integration',\n          'Bereavement support'\n        ]\n      },\n      \n      research: {\n        duration: '1 month',\n        setting: 'Academic research project',\n        objectives: [\n          'Research methodology',\n          'Data analysis skills',\n          'Scientific writing',\n          'Quality improvement'\n        ],\n        keyExperiences: [\n          'Literature review',\n          'Data collection and analysis',\n          'Conference presentation',\n          'Manuscript preparation'\n        ]\n      }\n    };\n  }\n\n  initializeCompetencies() {\n    return {\n      patientCare: {\n        description: 'Provide patient care that is compassionate, appropriate, and effective',\n        milestones: {\n          level1: 'Performs basic geriatric assessment under supervision',\n          level2: 'Independently manages common geriatric conditions', \n          level3: 'Manages complex multi-morbid patients',\n          level4: 'Serves as consultant for complex geriatric cases',\n          level5: 'Leads innovation in geriatric care delivery'\n        }\n      },\n      \n      medicalKnowledge: {\n        description: 'Demonstrate knowledge of established and evolving biomedical sciences',\n        milestones: {\n          level1: 'Understands basic aging physiology',\n          level2: 'Applies geriatric pharmacology principles',\n          level3: 'Integrates multisystem disease interactions',\n          level4: 'Demonstrates expertise in geriatric syndromes',\n          level5: 'Advances field through research/education'\n        }\n      },\n      \n      systemsBasedPractice: {\n        description: 'Demonstrate awareness of healthcare delivery systems',\n        milestones: {\n          level1: 'Understands Israeli healthcare structure',\n          level2: 'Navigates Kupah and Bituach Leumi systems',\n          level3: 'Coordinates complex care transitions',\n          level4: 'Leads quality improvement initiatives',\n          level5: 'Influences healthcare policy'\n        }\n      },\n      \n      practiceBasedLearning: {\n        description: 'Demonstrate ability to investigate and evaluate patient care',\n        milestones: {\n          level1: 'Identifies learning needs',\n          level2: 'Uses evidence to improve care',\n          level3: 'Teaches others effectively',\n          level4: 'Leads educational initiatives',\n          level5: 'Develops innovative teaching methods'\n        }\n      },\n      \n      interpersonalSkills: {\n        description: 'Demonstrate interpersonal and communication skills',\n        milestones: {\n          level1: 'Communicates respectfully with patients/families',\n          level2: 'Manages difficult conversations',\n          level3: 'Leads multidisciplinary teams',\n          level4: 'Mentors junior colleagues',\n          level5: 'Influences organizational communication'\n        }\n      },\n      \n      professionalism: {\n        description: 'Demonstrate commitment to professional responsibilities',\n        milestones: {\n          level1: 'Demonstrates ethical behavior',\n          level2: 'Shows commitment to continuous improvement',\n          level3: 'Advocates for patients and profession',\n          level4: 'Leads by example in professionalism',\n          level5: 'Shapes professional standards'\n        }\n      }\n    };\n  }\n\n  initializeAssessments() {\n    return {\n      directObservation: {\n        frequency: 'Monthly',\n        tools: ['Mini-CEX', 'DOPS (Direct Observation of Procedural Skills)', 'CbD (Case-based Discussion)'],\n        evaluators: ['Attending physicians', 'Senior residents', 'Allied health professionals']\n      },\n      \n      multisourcefeedback: {\n        frequency: 'Quarterly', \n        sources: ['Patients', 'Families', 'Nurses', 'Social workers', 'Therapists'],\n        focus: 'Interpersonal skills and professionalism'\n      },\n      \n      portfolioReview: {\n        frequency: 'Quarterly',\n        components: [\n          'Case log review',\n          'Reflection essays', \n          'Quality improvement projects',\n          'Teaching activities',\n          'Research progress'\n        ]\n      },\n      \n      examinations: {\n        inTraining: {\n          frequency: 'Bi-annual',\n          format: 'Multiple choice and case-based',\n          content: 'Core geriatric knowledge'\n        },\n        \n        boardExam: {\n          timing: 'End of fellowship',\n          format: 'Written and oral examination',\n          content: 'Comprehensive geriatric medicine'\n        }\n      }\n    };\n  }\n\n  initializeMilestones() {\n    return {\n      comprehensiveAssessment: {\n        month3: 'Performs CGA with minimal supervision',\n        month6: 'Independently conducts complex assessments',\n        month9: 'Teaches CGA to medical students',\n        month12: 'Develops assessment protocols'\n      },\n      \n      medicationManagement: {\n        month3: 'Applies basic deprescribing principles',\n        month6: 'Manages complex polypharmacy cases',\n        month9: 'Consults on medication optimization',\n        month12: 'Leads medication safety initiatives'\n      },\n      \n      systemNavigation: {\n        month3: 'Understands Kupah referral processes',\n        month6: 'Coordinates complex care transitions',\n        month9: 'Advocates effectively for patients',\n        month12: 'Influences system improvements'\n      }\n    };\n  }\n\n  initializeCurriculum() {\n    return {\n      didacticSeries: {\n        frequency: 'Weekly 2-hour sessions',\n        topics: [\n          'Geriatric Syndromes Deep Dive',\n          'Pharmacology in Aging',\n          'Cognitive Assessment and Dementia',\n          'Falls and Mobility Disorders', \n          'Nutrition and Sarcopenia',\n          'Palliative and End-of-Life Care',\n          'Geriatric Psychiatry',\n          'Healthcare Systems and Policy',\n          'Research Methods and Statistics',\n          'Teaching and Communication Skills'\n        ]\n      },\n      \n      journalClub: {\n        frequency: 'Bi-weekly',\n        focus: 'Critical appraisal of geriatric literature',\n        presentation: 'Fellow-led discussions'\n      },\n      \n      grandRounds: {\n        frequency: 'Monthly',\n        format: 'Case presentations and expert lectures',\n        audience: 'Multidisciplinary geriatrics team'\n      },\n      \n      conferences: {\n        israeliGeriatrics: 'Annual Israeli Geriatrics Society Meeting',\n        international: 'IAGG World Congress (encouraged)',\n        subspecialty: 'Alzheimer\\'s Association, Palliative Care conferences'\n      }\n    };\n  }\n\n  // Progress tracking and competency assessment\n  trackFellowProgress(fellowId, assessmentData) {\n    const currentProgress = this.fellowProgress.get(fellowId) || {\n      startDate: new Date(),\n      currentRotation: null,\n      competencyLevels: {},\n      assessments: [],\n      portfolio: []\n    };\n    \n    // Update competency levels based on assessment\n    Object.entries(assessmentData.competencyScores || {}).forEach(([competency, level]) => {\n      currentProgress.competencyLevels[competency] = Math.max(\n        currentProgress.competencyLevels[competency] || 1,\n        level\n      );\n    });\n    \n    // Add assessment record\n    currentProgress.assessments.push({\n      date: new Date(),\n      type: assessmentData.type,\n      evaluator: assessmentData.evaluator,\n      scores: assessmentData.scores,\n      feedback: assessmentData.feedback\n    });\n    \n    this.fellowProgress.set(fellowId, currentProgress);\n    return this.generateProgressReport(fellowId);\n  }\n\n  generateProgressReport(fellowId) {\n    const progress = this.fellowProgress.get(fellowId);\n    if (!progress) return null;\n    \n    const monthsCompleted = this.calculateMonthsCompleted(progress.startDate);\n    const expectedMilestones = this.getExpectedMilestones(monthsCompleted);\n    const currentLevels = progress.competencyLevels;\n    \n    return {\n      fellowId,\n      monthsCompleted,\n      currentRotation: progress.currentRotation,\n      competencyProgress: this.assessCompetencyProgress(currentLevels, monthsCompleted),\n      milestoneStatus: this.checkMilestoneCompletion(currentLevels, expectedMilestones),\n      recentFeedback: this.getRecentFeedback(progress.assessments),\n      recommendations: this.generateRecommendations(currentLevels, monthsCompleted),\n      boardReadiness: this.assessBoardReadiness(currentLevels, monthsCompleted)\n    };\n  }\n\n  assessCompetencyProgress(currentLevels, monthsCompleted) {\n    const expectedLevel = Math.min(Math.ceil(monthsCompleted / 3), 4);\n    const progressReport = {};\n    \n    Object.entries(this.competencies).forEach(([competency, _]) => {\n      const currentLevel = currentLevels[competency] || 1;\n      const status = currentLevel >= expectedLevel ? 'on-track' : \n                    currentLevel >= expectedLevel - 1 ? 'needs-attention' : 'concerning';\n      \n      progressReport[competency] = {\n        current: currentLevel,\n        expected: expectedLevel,\n        status\n      };\n    });\n    \n    return progressReport;\n  }\n\n  checkMilestoneCompletion(currentLevels, expectedMilestones) {\n    const milestoneStatus = {};\n    \n    Object.entries(expectedMilestones).forEach(([milestone, requiredLevel]) => {\n      const relatedCompetency = this.mapMilestoneToCompetency(milestone);\n      const currentLevel = currentLevels[relatedCompetency] || 1;\n      \n      milestoneStatus[milestone] = {\n        completed: currentLevel >= requiredLevel,\n        currentLevel,\n        requiredLevel\n      };\n    });\n    \n    return milestoneStatus;\n  }\n\n  generateRecommendations(currentLevels, monthsCompleted) {\n    const recommendations = [];\n    \n    // Check for lagging competencies\n    const expectedLevel = Math.min(Math.ceil(monthsCompleted / 3), 4);\n    Object.entries(currentLevels).forEach(([competency, level]) => {\n      if (level < expectedLevel - 1) {\n        recommendations.push(`Focus on developing ${competency} - consider additional mentoring`);\n      }\n    });\n    \n    // Rotation-specific recommendations\n    if (monthsCompleted >= 6 && monthsCompleted < 9) {\n      recommendations.push('Prepare for board examination - begin intensive study plan');\n    }\n    \n    if (monthsCompleted >= 9) {\n      recommendations.push('Focus on independent practice preparation and teaching skills');\n    }\n    \n    return recommendations;\n  }\n\n  assessBoardReadiness(currentLevels, monthsCompleted) {\n    const minLevels = {\n      patientCare: 4,\n      medicalKnowledge: 4,\n      systemsBasedPractice: 3,\n      practiceBasedLearning: 3,\n      interpersonalSkills: 3,\n      professionalism: 4\n    };\n    \n    const readinessScore = Object.entries(minLevels).reduce((score, [competency, minLevel]) => {\n      const currentLevel = currentLevels[competency] || 1;\n      return score + (currentLevel >= minLevel ? 1 : 0);\n    }, 0);\n    \n    const totalCompetencies = Object.keys(minLevels).length;\n    const readinessPercentage = (readinessScore / totalCompetencies) * 100;\n    \n    return {\n      percentage: readinessPercentage,\n      status: readinessPercentage >= 85 ? 'ready' :\n              readinessPercentage >= 70 ? 'nearly-ready' : 'needs-development',\n      monthsRemaining: Math.max(0, 12 - monthsCompleted),\n      recommendations: readinessPercentage < 85 ? \n        'Continue focused development in identified areas' :\n        'Maintain current performance and review board examination materials'\n    };\n  }\n\n  // Educational content generation\n  generateWeeklyLearningPlan(fellowId, currentWeek) {\n    const progress = this.fellowProgress.get(fellowId);\n    const weakAreas = this.identifyWeakAreas(progress?.competencyLevels || {});\n    \n    return {\n      week: currentWeek,\n      didacticTopic: this.curriculum.didacticSeries.topics[currentWeek % 10],\n      clinicalFocus: this.selectClinicalFocus(weakAreas),\n      readingAssignments: this.generateReadingList(currentWeek),\n      assessmentScheduled: this.checkUpcomingAssessments(fellowId),\n      goals: this.setWeeklyGoals(progress, currentWeek)\n    };\n  }\n\n  generateReadingList(weekNumber) {\n    const coreReadings = [\n      'Hazzard\\'s Geriatric Medicine - Chapter ' + (weekNumber % 20 + 1),\n      'Recent JAGS article on current week\\'s topic',\n      'Israeli Geriatrics Society guidelines (Hebrew)',\n      'MOH protocols related to current rotation'\n    ];\n    \n    return coreReadings;\n  }\n\n  // Integration with existing platform\n  integrateWithGeriatricsApp() {\n    return {\n      trackingIntegration: 'Link competency assessments to app usage',\n      caseCorrelation: 'Map app cases to fellowship milestones',\n      progressVisualization: 'Dashboard showing fellowship progress',\n      mentorAccess: 'Allow supervisors to view fellow development',\n      portfolioIntegration: 'Digital portfolio management'\n    };\n  }\n\n  // Utility methods\n  calculateMonthsCompleted(startDate) {\n    const now = new Date();\n    const monthsDiff = (now.getFullYear() - startDate.getFullYear()) * 12 + \n                      (now.getMonth() - startDate.getMonth());\n    return Math.max(0, monthsDiff);\n  }\n\n  getExpectedMilestones(monthsCompleted) {\n    const milestones = {};\n    Object.entries(this.milestones).forEach(([area, timepoints]) => {\n      Object.entries(timepoints).forEach(([timepoint, description]) => {\n        const requiredMonth = parseInt(timepoint.replace('month', ''));\n        if (monthsCompleted >= requiredMonth) {\n          milestones[`${area}_${timepoint}`] = Math.ceil(requiredMonth / 3);\n        }\n      });\n    });\n    return milestones;\n  }\n\n  mapMilestoneToCompetency(milestone) {\n    const mapping = {\n      comprehensiveAssessment: 'patientCare',\n      medicationManagement: 'medicalKnowledge', \n      systemNavigation: 'systemsBasedPractice'\n    };\n    \n    const area = milestone.split('_')[0];\n    return mapping[area] || 'patientCare';\n  }\n\n  getRecentFeedback(assessments) {\n    return assessments\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\n      .slice(0, 3)\n      .map(assessment => ({\n        date: assessment.date,\n        type: assessment.type,\n        feedback: assessment.feedback\n      }));\n  }\n\n  identifyWeakAreas(competencyLevels) {\n    const averageLevel = Object.values(competencyLevels).reduce((a, b) => a + b, 0) / \n                        Object.values(competencyLevels).length || 1;\n    \n    return Object.entries(competencyLevels)\n      .filter(([_, level]) => level < averageLevel)\n      .map(([competency, _]) => competency);\n  }\n\n  selectClinicalFocus(weakAreas) {\n    const focusMap = {\n      patientCare: 'Complex case management',\n      medicalKnowledge: 'Pharmacology review',\n      systemsBasedPractice: 'Healthcare navigation',\n      interpersonalSkills: 'Communication skills'\n    };\n    \n    return weakAreas.length > 0 ? \n      focusMap[weakAreas[0]] : \n      'Advanced geriatric syndromes';\n  }\n\n  checkUpcomingAssessments(fellowId) {\n    // Placeholder for assessment scheduling logic\n    return {\n      nextAssessment: 'Mini-CEX scheduled for next week',\n      type: 'direct-observation',\n      preparation: 'Review complex case presentations'\n    };\n  }\n\n  setWeeklyGoals(progress, week) {\n    return [\n      'Complete assigned clinical activities',\n      'Participate actively in didactic sessions',\n      'Document learning in portfolio',\n      'Seek feedback from supervisors'\n    ];\n  }\n}\n\n// Initialize for browser use\nif (typeof window !== 'undefined') {\n  window.GeriatricsFellowship = new GeriatricsFellowshipProgram();\n  console.log('🎓 Geriatrics Fellowship Training Program initialized');\n}\n\n// Export for Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = GeriatricsFellowshipProgram;\n}
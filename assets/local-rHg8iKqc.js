var a=Object.defineProperty;var u=(s,e,t)=>e in s?a(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>u(s,typeof e!="symbol"?e+"":e,t);class c{constructor(){n(this,"currentUser",null);n(this,"listeners",new Set)}async initialize(){const e=localStorage.getItem("geriatrics_auth_user");e&&(this.currentUser=JSON.parse(e),this.notifyListeners())}async signIn(e,t){const r={id:`user_${Date.now()}`,email:e,name:e.split("@")[0],role:"staff"};return this.currentUser=r,localStorage.setItem("geriatrics_auth_user",JSON.stringify(r)),this.notifyListeners(),r}async signUp(e,t,r){const i={id:`user_${Date.now()}`,email:e,name:r,role:"staff"};return this.currentUser=i,localStorage.setItem("geriatrics_auth_user",JSON.stringify(i)),this.notifyListeners(),i}async signOut(){this.currentUser=null,localStorage.removeItem("geriatrics_auth_user"),this.notifyListeners()}async getCurrentUser(){return this.currentUser}onAuthStateChange(e){return this.listeners.add(e),e(this.currentUser),()=>{this.listeners.delete(e)}}notifyListeners(){this.listeners.forEach(e=>e(this.currentUser))}}export{c as LocalAuth};

var u=Object.defineProperty;var l=(n,t,a)=>t in n?u(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a;var h=(n,t,a)=>l(n,typeof t!="symbol"?t+"":t,a);import{i as y,g,a as c,c as r,s as o,d as e,b as p,u as f,e as k}from"./firebase-BnSiId-0.js";class R{constructor(){h(this,"db");const a=y({apiKey:void 0,authDomain:void 0,projectId:void 0,storageBucket:void 0,messagingSenderId:void 0,appId:void 0});this.db=g(a)}async initialize(){(await c(r(this.db,"roster"))).empty&&await this.seedData()}async seedData(){try{const a=await(await fetch("/packs/roster.json")).json();for(const i of a.patients)await o(e(this.db,"roster",i.id),i);const d=await(await fetch("/packs/tasks.json")).json();for(const i of d.tasks)await o(e(this.db,"tasks",i.id),i);const b=["abbreviations.en","abbreviations.he","flashcards_mmse","checklist_frail"];for(const i of b){const w=await(await fetch(`/packs/${i}.json`)).json();await o(e(this.db,"packs",i),w)}}catch(t){console.error("Failed to seed Firebase data:",t)}}async getRoster(){return(await c(r(this.db,"roster"))).docs.map(a=>({id:a.id,...a.data()}))}async getPatient(t){const a=e(this.db,"roster",t),s=await p(a);return s.exists()?{id:s.id,...s.data()}:null}async updatePatient(t,a){const s=e(this.db,"roster",t);await f(s,{...a,lastUpdated:new Date().toISOString()})}async addPatient(t){await o(e(this.db,"roster",t.id),{...t,lastUpdated:new Date().toISOString()})}async deletePatient(t){await k(e(this.db,"roster",t))}async getTasks(){return(await c(r(this.db,"tasks"))).docs.map(a=>({id:a.id,...a.data()}))}async getTask(t){const a=e(this.db,"tasks",t),s=await p(a);return s.exists()?{id:s.id,...s.data()}:null}async updateTask(t,a){const s=e(this.db,"tasks",t);await f(s,a)}async addTask(t){await o(e(this.db,"tasks",t.id),t)}async deleteTask(t){await k(e(this.db,"tasks",t))}async addMMSEScore(t,a){const s=await this.getPatient(t);if(s){const d=s.mmse||[];d.push(a),await this.updatePatient(t,{mmse:d})}}async savePack(t,a){await o(e(this.db,"packs",t),a)}async getPack(t){const a=e(this.db,"packs",t),s=await p(a);return s.exists()?s.data():null}}export{R as FirebaseDataSource};
